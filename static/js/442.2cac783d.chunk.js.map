{"version":3,"file":"static/js/442.2cac783d.chunk.js","mappings":"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","sources":["Detail.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Detail.scss\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { 재고context } from \"./App.js\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nlet Box = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nlet Title = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.색상};\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nfunction Detail(props) {\r\n  let [alert, alertChange] = useState(true);\r\n  let [inputData, inputDataChange] = useState(\"\");\r\n\r\n  // 1. 몇 번째 버튼 눌렀는지 state로 저장\r\n  let [tab, tabChange] = useState(0);\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  let 재고 = useContext(재고context);\r\n\r\n  useEffect(() => {\r\n    let Timer = setTimeout(() => {\r\n      alertChange(false);\r\n    }, 2000);\r\n    console.log(\"안녕\");\r\n    return () => {\r\n      clearTimeout(Timer);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  let { id } = useParams();\r\n  let 찾은상품 = props.shoes.find(function (상품) {\r\n    return 상품.id == id;\r\n  });\r\n  let history = useHistory();\r\n  \r\n  useEffect(() => {// 1. Detail 페이지 들어가면\r\n    let arr = localStorage.getItem('watched');// 2. localStorage 데이터 꺼내기\r\n    \r\n    if (arr == null) {\r\n      arr = [];// arr꺼냈는데 [] 아니고 null이면 []하나 생성해주셈\r\n    } else {\r\n      arr = JSON.parse(arr);// 3. \"[]\"나오면 parse\r\n    }\r\n\r\n    arr.push(id);// 4. [].push(현재상품id)\r\n    arr = new Set(arr);// 5. 중복제거\r\n    // Set자료형은 어레이랑 똑같은데 중복을 자동으로 제거해줌\r\n    arr = [...arr];// ...: 소괄호 벗기기 -> 소괄호 벗겨서 0, 1 다시 대괄호 안에 넣어라 [0, 1]\r\n\r\n    localStorage.setItem('watched', JSON.stringify(arr));// 6. localStorage에 다시 저장\r\n  }, []);\r\n\r\n  // 1. 글자 벗겨서 새어레이에 담음\r\n  // 2. 새 어레이를 데이터에 저장\r\n  let newArr = JSON.parse(localStorage.getItem('watched'));\r\n  let [최근본상품, 최근본상품변경] = useState(newArr);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <Box>\r\n        <Title className=\"red\">상세페이지</Title>\r\n      </Box>\r\n\r\n      <input\r\n        onChange={(e) => {\r\n          inputDataChange(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {alert === true ? (\r\n        <div className=\"my-alert2\">\r\n          <p>재고가 얼마 남지 않았습니다</p>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}원</p>\r\n\r\n          <Info 재고={props.재고}></Info>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([9, 11, 12]);\r\n              // 주문하기 누르면 임시데이터가 아닌 페이지 내의 상품 추가\r\n              props.dispatch({\r\n                type: \"항목추가\",\r\n                데이터: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\r\n              });\r\n              history.push(\"/cart\");\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"watchedItem\">\r\n        <h6>최근 본 상품</h6>\r\n        {최근본상품.map((a, i) => {\r\n          return (\r\n            <div className=\"watchedItems\" key={i}>\r\n              <img src={\"https://codingapple1.github.io/shop/shoes\" + (i + 1) + \".jpg\"} alt=\"\"/>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        {/* defaultActiveKey: 기본으로 눌러진 버튼 */}\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              tabChange(0);\r\n            }}\r\n          >\r\n            Active\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              tabChange(1);\r\n            }}\r\n          >\r\n            Option 2\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              tabChange(2);\r\n            }}\r\n          >\r\n            Option 3\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n        <TabContent tab={tab} 스위치변경={스위치변경} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  });\r\n\r\n  if (props.tab === 0) {\r\n    return <div>0번째 내용입니다</div>;\r\n  } else if (props.tab === 1) {\r\n    return <div>1번째 내용입니다</div>;\r\n  } else if (props.tab === 2) {\r\n    return <div>2번째 내용입니다</div>;\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n  return <p>재고: {props.재고[0]}</p>;\r\n}\r\n\r\n// state를 props화 해주는 걸 써줘야 dispatch도 가능함\r\nfunction state를props화(state) {\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Detail);\r\n"],"names":["Box","styled","Title","props","색상","TabContent","useEffect","스위치변경","tab","Info","재고","connect","state","reducer","alert열렸니","reducer2","useState","alert","alertChange","inputDataChange","tabChange","스위치","useContext","재고context","Timer","setTimeout","console","log","clearTimeout","id","useParams","찾은상품","shoes","find","상품","history","useHistory","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","newArr","최근본상품","className","onChange","e","target","value","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","goBack","map","a","i","alt","variant","defaultActiveKey","eventKey","in","classNames","timeout"],"sourceRoot":""}